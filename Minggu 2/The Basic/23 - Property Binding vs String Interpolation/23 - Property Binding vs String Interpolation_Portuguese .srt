1
00:00:02,890 --> 00:00:05,720
Na última aula, aprendemos sobre a vinculação de propriedade.

2
00:00:05,770 --> 00:00:12,400
Agora, se tivéssemos que usar o caso que também queremos mostrar o valor atual do servidor de notícias ALLOW YOU, poderíamos,

3
00:00:12,400 --> 00:00:17,890
é claro, usar a instalação de strings para simplesmente permitir o servidor de notícias e o Boullion também

4
00:00:17,890 --> 00:00:19,660
pode ser convertido em uma string.

5
00:00:20,110 --> 00:00:25,500
Então agora vemos falles aqui e depois de dois segundos você vê apenas mudar para true porque mudamos o código.

6
00:00:25,660 --> 00:00:26,980
Agradável.

7
00:00:26,980 --> 00:00:32,320
Agora, este é um dos casos em que você está certo, você pode facilmente usar o binding de propriedade ao invés

8
00:00:32,320 --> 00:00:33,410
de string e depleção.

9
00:00:33,580 --> 00:00:43,560
Assim, você poderia simplesmente vincular a uma propriedade desse elemento a propriedade Text interna e definir esse igual para permitir um

10
00:00:43,560 --> 00:00:45,210
servidor de notícias.

11
00:00:45,210 --> 00:00:50,940
Agora eu posso remover o encordoamento aqui dentro do imposto e o que parece vazio agora.

12
00:00:51,030 --> 00:00:56,520
Bem, nós definimos em nosso texto para obtermos o mesmo comportamento de antes, porque a propriedade Text interna de um elemento

13
00:00:56,520 --> 00:01:00,000
é exatamente o que está entre a tag de abertura e de fechamento.

14
00:01:00,000 --> 00:01:05,990
Então, neste caso, fomos capazes de substituir facilmente a interpolação de string com a vinculação de propriedade.

15
00:01:06,000 --> 00:01:08,630
Então, quando você deve usar qual dos dois.

16
00:01:08,910 --> 00:01:14,880
Bem, basicamente, se você deseja imprimir algo em seu modelo, imprima um texto para ele usando interpelação de

17
00:01:15,330 --> 00:01:21,990
strings se você quiser alterar alguma propriedade como um elemento feminino envelhecido ou como você aprenderá mais tarde sobre uma

18
00:01:21,990 --> 00:01:23,560
diretiva ou um componente.

19
00:01:23,730 --> 00:01:25,740
Geralmente, use a ligação de propriedade.

20
00:01:25,740 --> 00:01:31,080
É assim que você pode se diferenciar e você terá um sentimento para isso depois de trabalhar o seu caminho através

21
00:01:31,080 --> 00:01:33,280
do projeto do curso e assim por diante.

22
00:01:33,510 --> 00:01:41,680
Portanto, ainda há uma observação importante que quero fazer é não misturar a vinculação de propriedade e a interpolação de string.

23
00:01:41,850 --> 00:01:48,750
Você pode notar que aqui temos deficientes iguais e, em seguida, temos aspas e, em

24
00:01:48,830 --> 00:01:55,410
seguida, diretamente nosso nome de propriedade, não há chaves entre essas aspas e não deveria

25
00:01:55,410 --> 00:01:55,830
haver.

26
00:01:55,950 --> 00:01:57,430
Porque isso vai quebrar o aplicativo.

27
00:01:57,450 --> 00:02:02,050
Isso não funcionará entre as aspas ou a vinculação de propriedade.

28
00:02:02,130 --> 00:02:09,270
Você pode e já deve escrever tipos de código para dizer uma expressão datilografada que retornará o valor

29
00:02:09,270 --> 00:02:11,100
que esta propriedade espera.

30
00:02:11,100 --> 00:02:14,360
Então, para desativado, alguma expressão retorna true ou false.

31
00:02:14,400 --> 00:02:20,580
Então, assim como com a interpolação de strings Você também pode chamar um método lá, mas você não deve adicionar

32
00:02:20,580 --> 00:02:21,540
chaves nesse local.

33
00:02:21,630 --> 00:02:25,110
O que isso pode parecer, simplesmente usamos o atributo HVM.

34
00:02:25,140 --> 00:02:26,420
Não estamos aqui.

35
00:02:26,490 --> 00:02:30,650
Todo este ano de sintaxe é uma sintaxe reconhecida por angular.

36
00:02:30,780 --> 00:02:37,360
Então é por isso que entre as aspas você já pode e você já tem que montar o código

37
00:02:37,370 --> 00:02:43,770
datilografado, porque mais uma vez toda essa expressão é avaliada por uma mistura angular na string da tribulação, ela

38
00:02:43,800 --> 00:02:44,540
será quebrada.

39
00:02:44,580 --> 00:02:51,750
A interpelação de strings funciona apenas no modelo normal, não com a expressão in e Navier desse modelo, não

40
00:02:51,870 --> 00:02:55,770
dentro de uma ligação de propriedade ou algo parecido com isto.

41
00:02:55,950 --> 00:03:03,090
Com isso suficiente sobre a vinculação de propriedade e geralmente sobre a saída de dados no modelo Vamos

42
00:03:03,240 --> 00:03:05,730
ver como podemos reagir a eventos
