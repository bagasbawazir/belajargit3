1
00:00:02,670 --> 00:00:05,090
最後の講義ではイベントバインディングを見てきました。

2
00:00:05,120 --> 00:00:09,190
双方向バインディングに焦点を当て、これが何であるかを説明する第4番。

3
00:00:09,200 --> 00:00:12,360
拘束力についても知っておく必要があるもう1つの重要なことがあります。

4
00:00:12,710 --> 00:00:17,210
Disburdenボタンの前にラベルサーバー名もあるとしましょう。

5
00:00:17,240 --> 00:00:24,110
さらに重要なのは、ブートストラップ・クラスのフォーム制御をここに与え、作成されるべきサーバーの名前をユーザーが入力できるようにするためです。

6
00:00:24,180 --> 00:00:29,040
&nbsp;

7
00:00:29,360 --> 00:00:31,300
ここで入力イベントを聞くことができました。

8
00:00:31,330 --> 00:00:37,600
これは通常の寮のイベントであり、火災である入力要素とユーザーが入力するものです。

9
00:00:38,000 --> 00:00:44,820
また、すべてのキーストロークで起動されるため、更新サーバー名で実行できます。

10
00:00:45,260 --> 00:00:53,390
ここでこのメソッドをコンポーネントに追加して、ユーザーが入力した内容を何とか出力したいと考えています。

11
00:00:53,390 --> 00:01:01,140
今、このフィールドの価値は、ここでドル記号のイベントを渡すことによってこれを行うことができ、Thallerのイベントを非常に重要なものに割り当てることは、私たちの予約された変数名の一種です。

12
00:01:01,140 --> 00:01:05,970
&nbsp;

13
00:01:06,020 --> 00:01:13,220
このイベントのイベントバインディングを使用するときにテンプレートを使用できます。したがって、これらの引用符の間だけ、ドル記号イベントは単純にそのイベントとともに発行されるデータになります。

14
00:01:13,220 --> 00:01:20,170
&nbsp;

15
00:01:20,540 --> 00:01:24,890
入力とクリックは、あなたが言うことができる寮のデフォルトイベントです。

16
00:01:25,220 --> 00:01:30,560
そして、それらが発射されたときにいくつかのデータを発送すると、clickイベントは、例えばクリックした座標を保持するオブジェクトを与え、イベントは、いくつかのデータまたはドル記号イベントが渡されたこのデータを取得できるイベントに関する情報を与えますKolgrimがドル記号を実行しているときに、これらの引用符の間のどこにでも呼び出す方法の引数として使用します。これは、イベントデータにアクセスできるようにするためのものです。

17
00:01:30,560 --> 00:01:35,540
&nbsp;

18
00:01:35,540 --> 00:01:42,410
&nbsp;

19
00:01:42,410 --> 00:01:48,530
&nbsp;

20
00:01:48,620 --> 00:01:52,910
&nbsp;

21
00:01:53,330 --> 00:01:56,550
これで更新サーバー名に渡します。

22
00:01:56,630 --> 00:02:02,040
だからここで私たちはこのイベントを受け取ることを知っており、これは今のところどんなタイプのものであろう。

23
00:02:02,450 --> 00:02:08,450
では、コンソールにこのログを記録して、このデバッグログで確認できるようにしましょう。

24
00:02:09,170 --> 00:02:17,610
私たちがこれを行い、今ここで何かを入力すれば、右のコンソールが見えます.4つの文字をタイプしたので4つのキーストロークを入力したので、正確には4つの出力がありました。

25
00:02:17,730 --> 00:02:22,880
&nbsp;

26
00:02:22,920 --> 00:02:25,880
入力バンドは4回発射されました。

27
00:02:25,890 --> 00:02:29,170
このイベントを見ると、ここでいくつかの情報が得られます。

28
00:02:29,220 --> 00:02:36,510
例えば、ターゲットとターゲットは、単にこのイベントが発生したHDMI要素です。

29
00:02:36,510 --> 00:02:48,550
そこでここでは、入力要素が下にスクロールして以来、値のテストを受け取りました。これはユーザーが入力したものです。

30
00:02:48,550 --> 00:02:49,830
&nbsp;

31
00:02:50,020 --> 00:02:57,130
したがって、私たちのタイプコピーコードでは、デフォルトでは空文字列のサーバー名プロパティを設定できます。

32
00:02:57,130 --> 00:02:58,670
&nbsp;

33
00:02:59,050 --> 00:03:06,490
&nbsp;

34
00:03:06,490 --> 00:03:14,650
&nbsp;

35
00:03:14,650 --> 00:03:22,440
そして、ここで我々の更新サーバー名ではなく、このサーバー名を言うことができました。我々はこのタイプのイベントであることを知っているので、ここではターゲットがあり、ターゲットには値とターゲットが入力要素の型であるためにのみ使用できます。

36
00:03:22,460 --> 00:03:25,220
だから私のIDはそれを好まないのです。

37
00:03:25,290 --> 00:03:31,220
ここにHDMI入力エレメントを追加することで、タイプスクリプトのタイプについて明示的に通知することができます。

38
00:03:32,580 --> 00:03:35,280
これのようにその前に。

39
00:03:35,510 --> 00:03:43,190
これは、このイベントのHDMI要素のタイプがHMOの入力要素になることを私たちが知っていることをタイプスクリプトに知らせるために必要です。

40
00:03:43,190 --> 00:03:45,790
&nbsp;

41
00:03:45,800 --> 00:03:52,670
このテキストを明示的にキャストするには、開始タグと終了タグを小文字と大文字で区切って入力し、その間に入力します。

42
00:03:52,670 --> 00:03:54,920
&nbsp;

43
00:03:55,340 --> 00:04:03,050
だから私たちが今ここで行うことができるサーバ名にこの値を割り当てることは、ここでファイルのAGMにあります。ここではこれを出力することができます。

44
00:04:04,080 --> 00:04:05,670
&nbsp;

45
00:04:05,670 --> 00:04:11,070
したがって厳密な照合では、サーバー名Melodia入力を出力できます。

46
00:04:11,310 --> 00:04:18,390
これを保存してこのアプリケーションに戻ってここにテストサーバーを入力すると、これは動的にメロデオンのポートを更新します。

47
00:04:18,390 --> 00:04:20,440
&nbsp;

48
00:04:20,580 --> 00:04:27,480
これは、このドル記号イベントオブジェクトを使用してイベントデータをフェッチする方法です。

49
00:04:27,480 --> 00:04:34,560
さて、ここでは、双方向のデータバインディングに移行して、今のところ少ししか完成していないeppiとして完成させましょう。

50
00:04:34,560 --> 00:04:35,230
&nbsp;
