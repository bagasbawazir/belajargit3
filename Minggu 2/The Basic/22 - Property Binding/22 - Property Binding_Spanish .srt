1
00:00:02,660 --> 00:00:07,900
En la última conferencia, echamos un vistazo a la interpelación de Stringer, que es una gran herramienta para

2
00:00:07,900 --> 00:00:09,280
generar datos en una plantilla.

3
00:00:09,340 --> 00:00:11,730
Ahora quiero echar un vistazo a la combinación de teclas adecuada.

4
00:00:11,770 --> 00:00:14,110
Ahora una formación importante de inmediato.

5
00:00:14,290 --> 00:00:20,680
Hay muchas veces en las que puede usar enlace de propiedad o interpelación de cadena.

6
00:00:20,680 --> 00:00:22,790
Y voy a mostrar lo que quiero decir en un segundo.

7
00:00:23,080 --> 00:00:29,710
Vayamos a nuestro componente de servicio donde administramos todos los servidores y quiero permitir que el usuario agregue

8
00:00:29,710 --> 00:00:31,380
nuevo servicio al menos pronto.

9
00:00:31,390 --> 00:00:32,750
Quiero permitir eso.

10
00:00:33,010 --> 00:00:37,690
Por lo tanto, no necesitamos un botón donde diga el servidor de anuncios.

11
00:00:37,690 --> 00:00:42,680
Y simplemente agregaría algunos EE. UU. Como botón classis y botón primario para hacer que esta parte se vea bien.

12
00:00:42,820 --> 00:00:49,400
Esto es todo usando bootstraps normales como clases, aunque no tiene nada que ver con angular y para reflejar este

13
00:00:49,400 --> 00:00:51,820
cambio en mi componente de servicio aquí.

14
00:00:51,910 --> 00:00:56,620
También quiero comentar la plantilla en línea y señalar de nuevo la plantilla externa.

15
00:00:56,800 --> 00:01:06,380
Así que la plantilla o bien debería apuntar a mi componente de servidor hacia la edad de él o caer de esta manera.

16
00:01:06,450 --> 00:01:12,510
Ahora con esto, si guardo como vemos ese botón aquí ahora, no tiene sentido que pueda hacer clic en

17
00:01:12,510 --> 00:01:18,460
este botón porque no hace nada que no hayamos aprendido a reaccionar ante un clic de botón todavía.

18
00:01:18,810 --> 00:01:26,250
Así que agregaré una nueva propiedad en mi código de mecanografía aquí que nombrará permitir servidor de noticias

19
00:01:26,280 --> 00:01:27,930
y establecerlo en falso.

20
00:01:27,930 --> 00:01:31,370
Entonces ahora esto es todo una propiedad numérica que tiene un valor booleano.

21
00:01:31,390 --> 00:01:37,050
Tan verdadero o falso en este caso es falso porque no quiero permitir que el usuario cree un nuevo servidor y podría

22
00:01:37,050 --> 00:01:40,850
volver a imaginarse que estos se ven privados de alguna manera de forma dinámica.

23
00:01:40,920 --> 00:01:48,460
Pronto trabajaremos con algunos datos dinámicos para que cualquier archivo HMO aquí ahora quiera desactivar el botón.

24
00:01:48,630 --> 00:01:55,050
Y como probablemente sepa que hay un atributo desactivado que puede agregar como días que ahora guardamos al desactivar los botones,

25
00:01:55,100 --> 00:01:56,660
puedo hacer clic en él.

26
00:01:56,790 --> 00:01:59,990
Eso está bien, pero está codificado en HVM L.

27
00:02:00,000 --> 00:02:04,440
Ahora quizás esto permita que el código del servidor de noticias aquí cambie.

28
00:02:04,470 --> 00:02:07,980
Sin embargo, tal vez no se dice que todo el tiempo.

29
00:02:08,190 --> 00:02:10,170
Entonces no podríamos reaccionar a esto.

30
00:02:10,170 --> 00:02:15,840
Y realmente puedo demostrar esto por ahora en el constructor, que es simplemente un método ejecutado en

31
00:02:15,840 --> 00:02:22,200
el momento en que este componente es creado por el pescador por su tiempo de espera del conjunto de llamadas.

32
00:02:22,230 --> 00:02:24,280
Una función normal de JavaScript.

33
00:02:24,600 --> 00:02:29,900
Y aquí defino después de qué período de tiempo o después de cuántos milisegundos debería pasar algo.

34
00:02:29,940 --> 00:02:35,080
Entonces, después de 2000 milisegundos, que son dos segundos, quiero ejecutar una función.

35
00:02:35,160 --> 00:02:38,400
Y aquí estoy usando como 6 función de flecha.

36
00:02:38,400 --> 00:02:40,320
Esta sintaxis puede parecer extraña.

37
00:02:40,350 --> 00:02:48,390
Es casi lo mismo que funcionar así con alguna diferencia cuando se trata de manejar esta palabra clave.

38
00:02:48,390 --> 00:02:53,670
Pero al final aquí pasaste los argumentos y aquí tienes el cuerpo de la función más importante

39
00:02:53,670 --> 00:02:54,420
en tu.

40
00:02:54,510 --> 00:03:00,120
Puedo configurar permitir el servidor de noticias y no, esto no funcionaría en la sintaxis promedio porque esto

41
00:03:00,120 --> 00:03:03,320
se referiría a algo más que puede establecerlo como verdadero.

42
00:03:03,330 --> 00:03:08,610
Entonces, después de dos segundos cambiaremos a True y como hemos codificado

43
00:03:08,640 --> 00:03:12,030
esto por supuesto, nuestro botón aquí permanece desactivado.

44
00:03:12,090 --> 00:03:19,740
Así que quiero vincularlo para permitir el servidor de noticias, así que ahora para hacer que

45
00:03:19,740 --> 00:03:26,580
esta funcionalidad deshabilitada sea dinámica podemos cegarlo encerrándolo entre corchetes, los paréntesis cuadrados indican que

46
00:03:26,580 --> 00:03:35,160
estamos usando el enlace de propiedad que queremos vincular dinámicamente alguna propiedad y inhabilitó el atributo HMO al

47
00:03:35,160 --> 00:03:35,490
final.

48
00:03:35,490 --> 00:03:42,390
En HVM normal, todo solo establece una propiedad específica en el elemento Dom subyacente.

49
00:03:42,420 --> 00:03:48,870
Puede observar que cada elemento HVM l que usa es analizado por el navegador y traducido a un elemento

50
00:03:48,870 --> 00:03:51,420
en el modelo de objetos del documento.

51
00:03:51,420 --> 00:03:54,080
Esto no tiene ninguna relación con angular.

52
00:03:54,270 --> 00:04:00,480
Y, por lo tanto, tenemos un elemento en esta forma y este elemento tiene un par de propiedades.

53
00:04:00,690 --> 00:04:05,350
Muchos de estos ni siquiera pueden establecerse en los atributos del elemento shemale.

54
00:04:05,700 --> 00:04:11,300
Bueno, una de las propiedades es deshabilitar la propiedad y puede establecer el atributo deshabilitado.

55
00:04:11,310 --> 00:04:18,240
Pero aquí ya no estamos usando para deshabilitar el atributo con los corchetes, estamos

56
00:04:18,520 --> 00:04:22,190
vinculando directamente la propiedad deshabilitada de Tudor.

57
00:04:22,190 --> 00:04:24,350
Este elemento HDMI tiene.

58
00:04:24,630 --> 00:04:27,040
Entonces ahora podemos establecer esto igual a.

59
00:04:27,150 --> 00:04:34,730
Y ahora con comillas ventosas aquí una expresión que para esta propiedad se resuelve en booleana.

60
00:04:34,740 --> 00:04:41,760
Pero para nuestras propiedades y número podría ser necesario Taieb porque de nuevo puede vincularse a muchas

61
00:04:41,940 --> 00:04:46,220
propiedades básicamente a todas las propiedades del elemento h l.

62
00:04:46,230 --> 00:04:50,020
Pronto sabremos que también hay propiedades de Amur que puedes comprar.

63
00:04:50,310 --> 00:04:53,350
Así que por ahora puedo simplemente pasar el servidor de noticias aquí.

64
00:04:53,640 --> 00:04:58,500
El nombre de mi propiedad porque esto se resolverá como Verdadero o falso.

65
00:04:58,520 --> 00:05:04,170
Devaluar exactamente lo mismo que necesita la propiedad porque tiene que decidir si se debe desactivar

66
00:05:04,170 --> 00:05:04,840
o no.

67
00:05:05,040 --> 00:05:08,940
Entonces ahora con eso si invertimos esto.

68
00:05:09,010 --> 00:05:14,110
Entonces, al agregar un signo de exclamación, nos aseguramos de que solo esté desactivado si esto es así.

69
00:05:14,100 --> 00:05:17,520
Entonces, si permitimos un nuevo servidor, no es verdad.

70
00:05:17,520 --> 00:05:20,040
De lo contrario, harías exactamente lo contrario.

71
00:05:20,190 --> 00:05:24,130
Entonces, con el signo de exclamación si volvemos al APAC, está deshabilitado.

72
00:05:24,430 --> 00:05:26,770
Pero después de dos segundos, déjame volver a cargar esto.

73
00:05:26,820 --> 00:05:34,020
Se habilita porque ahora estamos vinculando a esta propiedad deshabilitada esta propiedad de elemento nativo, nos estamos vinculando

74
00:05:34,400 --> 00:05:41,730
a nuestra propiedad de mecanografiado aquí y convocar la cosa es y esto es lo que angler se trata

75
00:05:41,760 --> 00:05:45,030
de que esto se actualizará de forma dinámica.

76
00:05:45,150 --> 00:05:52,270
Entonces, una vez que se permiten los cambios en el servidor de noticias, hay un cambio en los dormitorios ya que el botón se habilita.

77
00:05:52,350 --> 00:05:54,960
Una de las razones principales por las que usa angular.

78
00:05:54,960 --> 00:06:02,370
Te facilita interactuar con tu dormitorio para cambiar algo en el tiempo de ejecución como lo

79
00:06:02,370 --> 00:06:03,530
hacemos aquí.

80
00:06:03,830 --> 00:06:06,040
Eso es propiedad vinculante en.

81
00:06:06,080 --> 00:06:13,070
Ahora, como mencioné, además de enlazar las propiedades de los elementos HVM como lo hacemos aquí, también puedes extraer

82
00:06:13,070 --> 00:06:17,390
nuestras propiedades, por ejemplo, de directivas, algo que aún no hemos aprendido.

83
00:06:17,630 --> 00:06:21,090
Y sus propios componentes algo que también les mostraré más adelante.

84
00:06:21,140 --> 00:06:23,300
Entonces esta propiedad es vinculante.

85
00:06:23,300 --> 00:06:26,100
Antes de pasar a las otras dos formas de enlace de datos.

86
00:06:26,180 --> 00:06:31,810
Descubramos dónde podría usar la interpelación de cadenas en lugar de la vinculación de propiedades.
