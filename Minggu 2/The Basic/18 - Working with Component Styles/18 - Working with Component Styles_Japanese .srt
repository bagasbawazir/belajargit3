1
00:00:02,500 --> 00:00:08,560
テンプレートは重要であり、ここではテンプレートを使用したり、外部ファイルを指したりすることができます。

2
00:00:08,560 --> 00:00:10,150
&nbsp;

3
00:00:10,360 --> 00:00:11,700
スタイルはどうですか？

4
00:00:11,710 --> 00:00:17,230
私たちはまた、このスタイルまたはここにプロパティを持っており、私たちはDS C S Sファイルを持っています。

5
00:00:17,230 --> 00:00:19,080
それらで何ができるのですか？

6
00:00:19,550 --> 00:00:22,070
このために私たちのアプリコンポーネントに戻ってみましょう。

7
00:00:22,120 --> 00:00:25,710
ここに木のタグと水平線があります。

8
00:00:25,810 --> 00:00:30,120
私たちのアプリケーションを見てもそれほど正しいわけではありません。

9
00:00:30,330 --> 00:00:37,060
ここのappコンポーネントのテキストには、すべてのテキストが実際にあなたの上に座っています。あなたはきれいではありません。

10
00:00:37,060 --> 00:00:38,640
&nbsp;

11
00:00:38,830 --> 00:00:45,610
今ではブートストラップを使用しています。もちろん、いくつかのブートストラップクラスを使用してこれを強化することができます。そのため、コンテナクラスを1日追加してから行を追加することができます。

12
00:00:45,640 --> 00:00:49,800
&nbsp;

13
00:00:49,900 --> 00:00:53,490
これはちょうどDを使用しています。 C. フレームワークのブートストラップとして。

14
00:00:53,500 --> 00:00:58,400
したがって、これらは、このフレームワークによって提供されるいくつかのsiestasクラスです。

15
00:00:58,660 --> 00:01:05,080
そして、すべてのデバイスの嫌がらせに1つの列を持たせるために余分な富の列を追加することができます。

16
00:01:05,080 --> 00:01:12,100
ここでこれを追加すると、釣り人は何もしないようなスタイリングとして、いくつかのノーマルスタイルを追加しました。

17
00:01:12,100 --> 00:01:15,400
そして、私たちのアプリは少し良くなっています。

18
00:01:15,490 --> 00:01:21,360
これは素晴らしいことですが、私たちに与えられたいくつかのツールを角度を使って使うこともできます。

19
00:01:21,430 --> 00:01:24,990
ここでは、私はインドのコンポーネントの見出しだとしましょう。

20
00:01:25,000 --> 00:01:27,390
私たちはそのスタイルを変えたいと思っています。

21
00:01:27,590 --> 00:01:31,960
たぶん青色をほしいと思うかもしれません。

22
00:01:32,290 --> 00:01:39,480
私たちは、コンポーネントのスタイリングを定義するappコンポーネントC S Sファイルに行くだけで、それを行うことができます。

23
00:01:39,880 --> 00:01:42,690
そして今、私たちは通常のSEUS usコードを使用したり、書くことができます。

24
00:01:42,700 --> 00:01:49,570
したがって、Dのスタイルをオーバーライドします。 H. 無料のタグを付け、色をBalooに設定します。

25
00:01:49,570 --> 00:01:52,970
だから多分チューダーのダークブルー。

26
00:01:53,230 --> 00:01:59,050
これを保存してアプリケーションを見ると、濃い青色に見えます。

27
00:01:59,060 --> 00:02:08,230
ここで、このスタイルファイルをこのC-sをappコンポーネントでも参照されるファイルとして使用して、コンポーネントのスタイルを見つける方法です。

28
00:02:08,240 --> 00:02:11,390
&nbsp;

29
00:02:11,500 --> 00:02:20,170
テンプレートの外部ファイルとインラインコードを選択できるように、スタイリングでも同じことができます。

30
00:02:20,170 --> 00:02:22,420
&nbsp;

31
00:02:22,600 --> 00:02:29,310
あなたが知っているのは、そのスタイルがあなたや他の人が配列年であるのに対し、テンプレートはあなたではないということです。

32
00:02:29,350 --> 00:02:36,290
ここでは複数の外部スタイルシートを参照できるので、スタイルシートへのポインタを追加することができます。

33
00:02:36,790 --> 00:02:40,370
しかし、私はこれをコメントするつもりです。

34
00:02:40,420 --> 00:02:44,170
スタイルだけの数値プロパティを設定することもできます。

35
00:02:44,200 --> 00:02:50,770
これは配列をとるが、今はこの文字列のスタイルを定義する文字列の配列をとる。

36
00:02:50,770 --> 00:02:57,400
ここでこのファイルにここで複数行の式を書くことができるようにバックティックを使ってみましょう。ここでツリーを設定することができます。

37
00:02:57,400 --> 00:03:00,790
&nbsp;

38
00:03:00,790 --> 00:03:05,430
これが違うことを実際に示すために、私はカラーキューブを設定します。

39
00:03:05,440 --> 00:03:10,390
今はダークブルーを言ってはいけませんが、あなたはドジャーブルーです。

40
00:03:10,750 --> 00:03:18,070
そして今私がこれを保存してアプリケーションに戻ると、インラインスタイルが引き継がれているので、青い更新が表示されます。

41
00:03:18,070 --> 00:03:19,470
&nbsp;

42
00:03:19,480 --> 00:03:25,460
私はあなたがどちらを使うかを決めなければならないテンプレートのように、他のものをコメントアウトしました。

43
00:03:25,460 --> 00:03:32,290
スタイルやその他のスタイルを組み合わせることはできませんが、ここで重要なのはテンプレートとは異なる配列でなければなりません。

44
00:03:32,290 --> 00:03:33,000
&nbsp;

45
00:03:33,020 --> 00:03:40,730
複数のスタイルファイルまたはスタイル定義を持つことができるテンプレートは1つだけでなければならず、ファイル内でインラインとエキストラのどちらかを選択できます。

46
00:03:40,730 --> 00:03:43,330
&nbsp;

47
00:03:43,340 --> 00:03:46,370
ルールは基本的にテンプレートと同じです。

48
00:03:46,370 --> 00:03:52,970
そこに外部ファイルを使用しているコードが多い場合は、このような短いスタイル定義であれば良い考えです。

49
00:03:52,970 --> 00:03:53,670
&nbsp;

50
00:03:53,720 --> 00:03:56,970
なぜあなたはそれをtypescriptファイルに入れませんか？

51
00:03:56,990 --> 00:03:59,940
これは、テンプレートとスタイルを使用して作業する方法です
