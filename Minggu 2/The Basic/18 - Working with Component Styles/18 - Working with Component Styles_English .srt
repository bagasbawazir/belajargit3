1
00:00:02,500 --> 00:00:08,560
We understood that templates are important and that we can either use them in line here or point to

2
00:00:08,560 --> 00:00:10,150
an external file.

3
00:00:10,360 --> 00:00:11,700
What about styles.

4
00:00:11,710 --> 00:00:17,230
We also have this style or else property here and we have DS C S S files.

5
00:00:17,230 --> 00:00:19,080
What can we do with those.

6
00:00:19,550 --> 00:00:22,070
Let's go back to our app component for this.

7
00:00:22,120 --> 00:00:25,710
Here we got a tree tag and a horizontal line.

8
00:00:25,810 --> 00:00:30,120
And if we have a look at our application it's not that pretty right.

9
00:00:30,330 --> 00:00:37,060
The I'm in the app component text here are all the text actually is sitting right on the you're not

10
00:00:37,060 --> 00:00:38,640
super pretty.

11
00:00:38,830 --> 00:00:45,610
Now since we use bootstrap Of course we can use some bootstrap classes to enhance this so we could add

12
00:00:45,640 --> 00:00:49,800
a day of with our container class around it then add a row.

13
00:00:49,900 --> 00:00:53,490
And this is just using D.C.'s as framework bootstrap.

14
00:00:53,500 --> 00:00:58,400
So these are some siestas classes provided by this framework nothing angler's specific.

15
00:00:58,660 --> 00:01:05,080
And then we could add a column of your excess wealth to have one column on all device whiffs.

16
00:01:05,080 --> 00:01:12,100
Now if we add this we added some styling some normalcy as a styling nothing angler's specific.

17
00:01:12,100 --> 00:01:15,400
And our app looks a little bit nicer now.

18
00:01:15,490 --> 00:01:21,360
This is great but we can also use some tools given to us by angularity.

19
00:01:21,430 --> 00:01:24,990
Let's say does I'm India component heading here.

20
00:01:25,000 --> 00:01:27,390
We want to change that style.

21
00:01:27,590 --> 00:01:31,960
Maybe we want to give some blue color.

22
00:01:32,290 --> 00:01:39,480
We can do it just by going to the app component C S S file which defines the styling for does component.

23
00:01:39,880 --> 00:01:42,690
And now we can use or write normal SEUS us code.

24
00:01:42,700 --> 00:01:49,570
So override the style of D.H. free tag and set its color to some Baloo.

25
00:01:49,570 --> 00:01:52,970
So maybe Tudor's dark blue here.

26
00:01:53,230 --> 00:01:59,050
If we now save this and we have a look at our application you see it's dark blue.

27
00:01:59,060 --> 00:02:08,230
Now this is how you can use this style file this C-s as file referenced in the app component here too

28
00:02:08,240 --> 00:02:11,390
to find the styles for a component.

29
00:02:11,500 --> 00:02:20,170
Now just like we were able to choose between external file and inline code for the template we can do

30
00:02:20,170 --> 00:02:22,420
the same for the styling.

31
00:02:22,600 --> 00:02:29,310
You know does that style you or else is an array year whereas template you were a Wasn't it is this.

32
00:02:29,350 --> 00:02:36,290
Because we could reference multiple external style sheets here so you could add pointers to stylesheets.

33
00:02:36,790 --> 00:02:40,370
But besides that I'm going to comment this out.

34
00:02:40,420 --> 00:02:44,170
You can also set up a number property which is just styles.

35
00:02:44,200 --> 00:02:50,770
This also takes an array but now it takes an array of strings where you define the style in this string.

36
00:02:50,770 --> 00:02:57,400
So now in this file here I'm going to use back ticks again to be able to write a multi-line expression

37
00:02:57,400 --> 00:03:00,790
here and then we could set up a tree here.

38
00:03:00,790 --> 00:03:05,430
And to really show you that this is different I will set the color cube.

39
00:03:05,440 --> 00:03:10,390
Now let's not say dark blue but you Dodger blue.

40
00:03:10,750 --> 00:03:18,070
And if I now save this and we go back to the application you see the blue updated because now the inline

41
00:03:18,070 --> 00:03:19,470
style is taking over.

42
00:03:19,480 --> 00:03:25,460
I commented out the other one just like with the template you have to decide which one to use.

43
00:03:25,460 --> 00:03:32,290
You can't combine style or else and styles but both important here has to be an array that's different

44
00:03:32,290 --> 00:03:33,000
to template.

45
00:03:33,020 --> 00:03:40,730
You must only have one template you may have multiple style files or style definitions and you can choose

46
00:03:40,730 --> 00:03:43,330
between inline and extra in a file.

47
00:03:43,340 --> 00:03:46,370
The rules are basically the same as for template.

48
00:03:46,370 --> 00:03:52,970
If you have more code in there using an external file is a good idea if it's a short style definition

49
00:03:52,970 --> 00:03:53,670
like this.

50
00:03:53,720 --> 00:03:56,970
Why don't you just put it into the typescript file.

51
00:03:56,990 --> 00:03:59,940
This is how you can work with templates and styles
