1
00:00:02,500 --> 00:00:08,560
Entendemos que os modelos são importantes e que podemos usá-los na linha aqui ou apontar

2
00:00:08,560 --> 00:00:10,150
para um arquivo externo.

3
00:00:10,360 --> 00:00:11,700
O que sobre estilos.

4
00:00:11,710 --> 00:00:17,230
Nós também temos este estilo ou outra propriedade aqui e nós temos arquivos DS C S S.

5
00:00:17,230 --> 00:00:19,080
O que podemos fazer com eles?

6
00:00:19,550 --> 00:00:22,070
Vamos voltar ao nosso componente de aplicativo para isso.

7
00:00:22,120 --> 00:00:25,710
Aqui temos uma tag de árvore e uma linha horizontal.

8
00:00:25,810 --> 00:00:30,120
E se dermos uma olhada em nosso aplicativo, não é tão certo.

9
00:00:30,330 --> 00:00:37,060
Eu estou no texto do componente app aqui estão todo o texto, na verdade, está sentado em cima do que

10
00:00:37,060 --> 00:00:38,640
você não é super bonita.

11
00:00:38,830 --> 00:00:45,610
Agora, já que usamos o bootstrap É claro que podemos usar algumas classes de bootstrap para melhorar isso, para que possamos

12
00:00:45,640 --> 00:00:49,800
adicionar um dia de classe contêiner em torno dele e adicionar uma linha.

13
00:00:49,900 --> 00:00:53,490
E isso é apenas usando D. C. como bootstrap de framework.

14
00:00:53,500 --> 00:00:58,400
Então, essas são algumas classes de sestas fornecidas por essa estrutura específica de nenhum pescador.

15
00:00:58,660 --> 00:01:05,080
E então poderíamos adicionar uma coluna de seu excesso de riqueza para ter uma coluna em todos os tipos de dispositivo.

16
00:01:05,080 --> 00:01:12,100
Agora, se adicionarmos isso, adicionamos um pouco de estilo à normalidade como um estilo específico para nenhum pescador.

17
00:01:12,100 --> 00:01:15,400
E nosso aplicativo parece um pouco melhor agora.

18
00:01:15,490 --> 00:01:21,360
Isso é ótimo, mas também podemos usar algumas ferramentas que nos são dadas pela angularidade.

19
00:01:21,430 --> 00:01:24,990
Digamos que eu sou o componente da Índia indo aqui.

20
00:01:25,000 --> 00:01:27,390
Queremos mudar esse estilo.

21
00:01:27,590 --> 00:01:31,960
Talvez nós queremos dar um pouco de cor azul.

22
00:01:32,290 --> 00:01:39,480
Podemos fazer isso apenas indo até o arquivo do componente de aplicativo C S S que define o estilo do componente.

23
00:01:39,880 --> 00:01:42,690
E agora podemos usar ou escrever o código normal do US SEUS.

24
00:01:42,700 --> 00:01:49,570
Então, substitua o estilo de D. H. tag livre e definir sua cor para algum Baloo.

25
00:01:49,570 --> 00:01:52,970
Então talvez o azul escuro de Tudor aqui.

26
00:01:53,230 --> 00:01:59,050
Se agora salvarmos isso e dermos uma olhada no nosso aplicativo, você verá que é azul escuro.

27
00:01:59,060 --> 00:02:08,230
Agora, é assim que você pode usar este arquivo de estilo neste arquivo C-s como referência no componente de aplicativo aqui também

28
00:02:08,240 --> 00:02:11,390
para encontrar os estilos de um componente.

29
00:02:11,500 --> 00:02:20,170
Agora, assim como fomos capazes de escolher entre o arquivo externo e o código embutido para o modelo, podemos fazer

30
00:02:20,170 --> 00:02:22,420
o mesmo para o estilo.

31
00:02:22,600 --> 00:02:29,310
Você sabe que faz esse estilo você ou então é um ano de matriz, enquanto modelo você era um Não era isso.

32
00:02:29,350 --> 00:02:36,290
Porque poderíamos referenciar várias folhas de estilo externas aqui para que você pudesse adicionar ponteiros a folhas de estilo.

33
00:02:36,790 --> 00:02:40,370
Mas além disso, vou comentar isso.

34
00:02:40,420 --> 00:02:44,170
Você também pode configurar uma propriedade numérica que é apenas estilos.

35
00:02:44,200 --> 00:02:50,770
Isso também leva um array, mas agora é preciso um array de strings onde você define o estilo nessa string.

36
00:02:50,770 --> 00:02:57,400
Então agora neste arquivo aqui eu vou usar back ticks novamente para poder escrever uma expressão multi-line

37
00:02:57,400 --> 00:03:00,790
aqui e então nós poderíamos configurar uma árvore aqui.

38
00:03:00,790 --> 00:03:05,430
E para realmente mostrar que isso é diferente, vou definir o cubo de cores.

39
00:03:05,440 --> 00:03:10,390
Agora não digamos azul escuro, mas você Dodger azul.

40
00:03:10,750 --> 00:03:18,070
E se eu agora salvar isso e voltarmos para o aplicativo, você verá o azul atualizado porque agora o

41
00:03:18,070 --> 00:03:19,470
estilo inline está assumindo.

42
00:03:19,480 --> 00:03:25,460
Eu comentei o outro assim como com o modelo você tem que decidir qual deles usar.

43
00:03:25,460 --> 00:03:32,290
Você não pode combinar estilo ou outros estilos, mas ambos importantes aqui devem ser uma matriz diferente

44
00:03:32,290 --> 00:03:33,000
do modelo.

45
00:03:33,020 --> 00:03:40,730
Você deve ter apenas um modelo, você pode ter vários arquivos de estilo ou definições de estilo e você pode escolher

46
00:03:40,730 --> 00:03:43,330
entre inline e extra em um arquivo.

47
00:03:43,340 --> 00:03:46,370
As regras são basicamente as mesmas que para o modelo.

48
00:03:46,370 --> 00:03:52,970
Se você tem mais código lá usando um arquivo externo, é uma boa idéia se é uma definição de estilo curto

49
00:03:52,970 --> 00:03:53,670
como esta.

50
00:03:53,720 --> 00:03:56,970
Por que você não o coloca no arquivo de texto datilografado?

51
00:03:56,990 --> 00:03:59,940
É assim que você pode trabalhar com modelos e estilos
