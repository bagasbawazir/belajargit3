1
00:00:02,660 --> 00:00:10,560
最後の講義では、ブラウザーにlocalhost 4200をここに置いた時点で何が起こるかを詳しく見てきました。

2
00:00:10,620 --> 00:00:12,000
&nbsp;

3
00:00:12,120 --> 00:00:18,480
&nbsp;

4
00:00:18,480 --> 00:00:24,390
&nbsp;

5
00:00:24,390 --> 00:00:30,840
&nbsp;

6
00:00:30,900 --> 00:00:36,650
私たちはインデックスHVMファイルが提供されていることを理解しています。ここでスクリプトの束を実行して実行することができます。基本的に角度アプリを起動します。ダングラーアプリは重要な情報を取得します。角度コードはここでABのルートコンポーネントを解析することができます。

7
00:00:36,670 --> 00:00:42,600
それを理解して、この時点で怒りのアプリケーションを挿入してください。それは、あなたが見ることができるように、まだこのページのソースコード内にあるドットドットを読み込むことを見ないのです。

8
00:00:42,600 --> 00:00:47,190
&nbsp;

9
00:00:47,250 --> 00:00:55,760
しかし、代わりに実行時に角がこれを上書きするので、私たちはこれをなぜ見るのですか？なぜなら、SCHABASのために何をするのかということです。

10
00:00:55,780 --> 00:00:57,730
&nbsp;

11
00:00:57,750 --> 00:01:04,500
そこで、このスタートアッププロセスをよく見て、これらのCobboldを詳しく見てみましょう。コンポーネントや一般的なコンポーネントを追加することは、角度の重要な機能です。

12
00:01:04,530 --> 00:01:10,460
&nbsp;

13
00:01:10,500 --> 00:01:17,220
あなた自身で作成したいくつかのコンポーネントからアプリケーションを作成して、アプリケーション全体を構築します。

14
00:01:17,220 --> 00:01:18,260
&nbsp;

15
00:01:18,270 --> 00:01:24,080
ここでは、このアプリケーションコンポーネントから始めて、あなたが言うべき根本的な要素と、基本的にはアプリケーション全体をどのように保持するのかについて説明します。

16
00:01:24,080 --> 00:01:26,310
&nbsp;

17
00:01:26,340 --> 00:01:32,670
したがって、このルートコンポーネントは、このアプリケーションコンポーネントが後で他のコンポーネントをネストまたは追加するコンポーネントになります。

18
00:01:32,670 --> 00:01:33,720
&nbsp;

19
00:01:33,720 --> 00:01:36,580
したがって、このテンプレートにはHVMがオフになります。

20
00:01:36,600 --> 00:01:37,540
イエップ成分。

21
00:01:37,560 --> 00:01:41,050
ここで、後で他のコンポーネントを追加します。

22
00:01:41,160 --> 00:01:46,830
典型的には、このようなWebページには、家庭とユーザーのヘッダー、メインエリアとサイドバーがあるかもしれません。

23
00:01:46,830 --> 00:01:48,370
&nbsp;

24
00:01:48,780 --> 00:01:55,930
今我々が見ている場合、これはヘッダーに合ったコンポーネントとなり、おそらく髪の毛のアイテムが自分のものになる可能性があります。

25
00:01:55,980 --> 00:01:58,960
&nbsp;

26
00:01:59,010 --> 00:02:06,670
コースから、アプリケーションを分割して別のコンポーネントに分割する方法を学習します。

27
00:02:06,690 --> 00:02:14,280
もちろん、メインエリアには、ここではコンポーネントとしてのバーがあり、これはEnglerの組み込みコンポーネントの背後にあるコアアイデアです。

28
00:02:14,490 --> 00:02:15,860
&nbsp;

29
00:02:15,870 --> 00:02:21,130
各コンポーネントには独自のテンプレートがあり、それ自身の年齢はすべて独自のスタイリングで殺されました。

30
00:02:21,210 --> 00:02:26,850
さらに重要なのは、独自のビジネスロジックとビジネスも大きなメリットです。

31
00:02:26,850 --> 00:02:34,180
複雑なWebページを複雑なアプリケーションと再利用可能な部分に分割することができます。

32
00:02:34,200 --> 00:02:39,840
コンポーネントを複数回使用して、そのビジネスロジックを簡単に複製することができます。

33
00:02:39,870 --> 00:02:48,090
そのスタイリングを複製するか、一般的にはすべてを単一のスクリプトファイルにまとめて1つのファイルにする必要はなく、アプリケーション内の細かく制御された部分を作成します。

34
00:02:48,090 --> 00:02:54,440
&nbsp;

35
00:02:54,480 --> 00:02:59,330
更新が非常に簡単で、交換も簡単で再利用も簡単です。

36
00:02:59,370 --> 00:03:04,890
では、実際にコンポーネントを作成する方法と、そのコンポーネントのことが次の講義で何をするのかを詳しく見ていきましょう。

37
00:03:04,890 --> 00:03:06,980
&nbsp;
