1
00:00:02,660 --> 00:00:10,560
Nell'ultima lezione abbiamo esaminato attentamente cosa succede nel momento in cui abbiamo localizzato il localhost 4200

2
00:00:10,620 --> 00:00:12,000
qui nel browser.

3
00:00:12,120 --> 00:00:18,480
Abbiamo capito che il file indice HVM è servito che conterrà qui un gruppo di script

4
00:00:18,480 --> 00:00:24,390
che possono essere eseguiti che poi avvia sostanzialmente l'app angolare app dangler ottiene l'informazione

5
00:00:24,390 --> 00:00:30,840
importante deaded dovrebbe conoscere il componente app che dovrebbe analizzarlo con quelle informazioni il il codice

6
00:00:30,900 --> 00:00:36,650
angolare è in grado di analizzare questo anno fa il componente root AB qui.

7
00:00:36,670 --> 00:00:42,600
Capisci questo e inserisci la nostra applicazione di rabbia a questo punto ed è per questo che non vediamo il punto

8
00:00:42,600 --> 00:00:47,190
di punto di caricamento che sarebbe ancora nel codice sorgente di questa pagina, come puoi vedere.

9
00:00:47,250 --> 00:00:55,760
Ma perché invece lo vediamo perché angolare lo sovrascrive in fase di esecuzione perché anche quello che fa per

10
00:00:55,780 --> 00:00:57,730
ciò che è SCHABAS.

11
00:00:57,750 --> 00:01:04,500
Quindi, ora che abbiamo dato un'occhiata da vicino a questo processo di avvio, diamo un'occhiata più da vicino a

12
00:01:04,530 --> 00:01:10,460
questi Cobbold e o aggiungiamo componenti e i componenti generali sono una caratteristica chiave in modo angolare.

13
00:01:10,500 --> 00:01:17,220
Costruisci la tua intera applicazione componendola da un paio di componenti che crei

14
00:01:17,220 --> 00:01:18,260
da solo.

15
00:01:18,270 --> 00:01:24,080
Ora iniziamo con questo componente dell'app il componente root che dovresti dire che contiene il nostro e come

16
00:01:24,080 --> 00:01:26,310
fondamentalmente tutta la nostra applicazione alla fine.

17
00:01:26,340 --> 00:01:32,670
Quindi questo componente di rotta questo componente dell'app sarà il componente in cui successivamente nidificheremo o aggiungeremo anche gli

18
00:01:32,670 --> 00:01:33,720
altri nostri componenti.

19
00:01:33,720 --> 00:01:36,580
Quindi a questo modello il file HVM non è attivo.

20
00:01:36,600 --> 00:01:37,540
Componente Yep.

21
00:01:37,560 --> 00:01:41,050
Questo è dove aggiungeremo in seguito i nostri altri componenti.

22
00:01:41,160 --> 00:01:46,830
In genere potremmo avere una pagina web come questa con un'intestazione con home e utenti, quindi un'area principale

23
00:01:46,830 --> 00:01:48,370
e una barra laterale forse.

24
00:01:48,780 --> 00:01:55,930
appropriato per l'intestazione e forse anche gli articoli sui capelli potrebbero essere il loro Kebon potrebbe essere che non devi.

25
00:01:55,980 --> 00:01:58,960
Ora, se diamo un'occhiata, questo sarebbe un componente

26
00:01:59,010 --> 00:02:06,670
Imparerai dal Corso come mi avvicino alla suddivisione di un'applicazione in componenti separati.

27
00:02:06,690 --> 00:02:14,280
Ovviamente abbiamo anche la nostra area principale la barra qui come componenti e questa è l'idea alla base dei

28
00:02:14,490 --> 00:02:15,860
componenti realizzati da Engler.

29
00:02:15,870 --> 00:02:21,130
Ogni componente ha il proprio modello della propria età, tutti uccisi, forse il proprio stile.

30
00:02:21,210 --> 00:02:26,850
E, ancora più importante, anche la propria logica di business e il proprio business.

31
00:02:26,850 --> 00:02:34,180
Ci consente di suddividere la tua complessa applicazione in una pagina web complessa in parti riutilizzabili.

32
00:02:34,200 --> 00:02:39,840
È possibile utilizzare un componente più di una volta e ciò consente di replicare facilmente tale logica aziendale.

33
00:02:39,870 --> 00:02:48,090
Replica questo stile o, in generale, crea un pezzo finemente controllato nella tua applicazione senza dover

34
00:02:48,090 --> 00:02:54,440
scomporre tutto in un unico file di script, invece di un singolo file.

35
00:02:54,480 --> 00:02:59,330
È molto facile da aggiornare molto facile da scambiare e nuovamente riutilizzabile.

36
00:02:59,370 --> 00:03:04,890
Diamo uno sguardo più da vicino a come effettivamente creiamo un componente e cosa fa

37
00:03:04,890 --> 00:03:06,980
questa componente nella prossima lezione.
