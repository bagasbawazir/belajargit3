1
00:00:03,180 --> 00:00:09,110
最後の講義では、テンプレート内のデータを出力するために、プロパティバインディングとストリングシンバルを使用する方法について多くのことを学びます。

2
00:00:09,110 --> 00:00:10,750
&nbsp;

3
00:00:10,760 --> 00:00:12,160
今すぐイベントに反応しましょう。

4
00:00:12,170 --> 00:00:14,010
たとえば、ここにパターンがあります。

5
00:00:14,180 --> 00:00:20,090
そして2秒後にこの悪いことが可能になるので、ボタンをクリックすると何かできることがうまくいくでしょう。

6
00:00:20,090 --> 00:00:20,890
&nbsp;

7
00:00:21,200 --> 00:00:27,470
今度は、私たちが実際にニュースサーバーを追加して、サーバーの新しいレプリケーションをどのようにサーバーコンポーネントのセレクターに追加することができるかをすぐにご紹介します。

8
00:00:27,560 --> 00:00:30,920
&nbsp;

9
00:00:30,980 --> 00:00:35,440
今のところ私がしたいのは何かを出力したいのです。

10
00:00:35,450 --> 00:00:41,180
ここではこのテキストを削除しますが、ここではプロパティの値を出力するか、このプロパティを作成します。

11
00:00:41,180 --> 00:00:42,060
&nbsp;

12
00:00:42,100 --> 00:00:45,680
そしてもう一度あなたはそれにもっと力を入れます。私はこれに戻ります。

13
00:00:45,740 --> 00:00:55,660
私はその名前をServer creation statusとし、最初にそれをサーバに設定することはできませんでした。

14
00:00:55,660 --> 00:01:00,620
今、このプロパティは、出力線の文字列の苦難のサーバーの作成の状態にすることができます。

15
00:01:00,640 --> 00:01:03,930
そして、データの出力を続けたくないと言っただけです。

16
00:01:03,940 --> 00:01:05,330
我々はイベントを聞きたい。

17
00:01:05,380 --> 00:01:07,720
だから、私たちはそれを約束した。

18
00:01:07,870 --> 00:01:16,360
ここでは別のメソッドを追加して、このメソッドの名前を最初にサーバーdを作成するときに指定して、これがテンプレート内からトリガーされることを明確にします。

19
00:01:16,360 --> 00:01:20,750
&nbsp;

20
00:01:20,770 --> 00:01:26,830
何かに名前を付ける必要はありませんが、このメソッドを呼び出す人を理解するのが簡単になります。

21
00:01:26,830 --> 00:01:27,600
&nbsp;

22
00:01:27,790 --> 00:01:33,370
まあ、ユーザーは基本的には何かをすることによって、私はそれを象徴したいものである何らかのイベントを呼び出すでしょう。

23
00:01:33,370 --> 00:01:34,230
&nbsp;

24
00:01:34,510 --> 00:01:39,770
したがって、サーバーの作成状況をサーバーに設定できる場合は作成されました。

25
00:01:40,270 --> 00:01:43,570
欠けている部分は、このメソッドを呼び出すことです。

26
00:01:43,570 --> 00:01:50,340
そしてここで、ここでは、拘束力が発揮されたときに、このクリックイベントをここで聞きたい場合です。

27
00:01:50,470 --> 00:01:56,740
そして、通常、Chalisドロップされたコードを実行できるHDMI要素のon click属性があります。

28
00:01:56,730 --> 00:01:57,550
&nbsp;

29
00:01:57,670 --> 00:01:59,690
私たちは釣り人でそれを使用しません。

30
00:01:59,860 --> 00:02:08,800
ここで、Sendakのアングラーは、イベントバインディングのようなカッコを使用するイベントバインディングを提供しています。

31
00:02:08,830 --> 00:02:11,800
&nbsp;

32
00:02:11,800 --> 00:02:15,190
カッコは、バインディング時に使用しているシグナルです。

33
00:02:15,490 --> 00:02:19,630
ここでは、括弧の間にDBANの名前を指定する必要があります。

34
00:02:19,750 --> 00:02:28,090
たとえば、クリックすると、基本的にHDMI属性で使用可能になったすべてのイベントにバインドできます。

35
00:02:28,150 --> 00:02:29,740
あなたは私たちを置いています。

36
00:02:29,800 --> 00:02:37,600
あなたがマウスをクリックしている場合は、最初にオンにすることなく、マウスをクリックして入力するようにバインドすることができます。

37
00:02:37,600 --> 00:02:40,000
だから私たちはクリックイベントを知らない。

38
00:02:40,090 --> 00:02:45,070
引用符の間に、実行したいコードを入れます。

39
00:02:45,160 --> 00:02:50,290
このイベントが発生すると、ここでメソッドを呼び出すことはよくありません。

40
00:02:50,320 --> 00:02:58,690
ですから、LEDが実行したいメソッドを指しているときに、それはカッコでサーバを作成しています。

41
00:02:58,810 --> 00:03:02,830
このメソッドは、ボタンをクリックするたびに実行されます。

42
00:03:03,220 --> 00:03:06,390
サイドノートとして、ここでメソッドを実行する必要はありません。

43
00:03:06,430 --> 00:03:11,140
また、実行したいコードを二重引用符で囲むこともできます。

44
00:03:11,300 --> 00:03:18,100
しばしばイベントが発生した場合にもっとコードを実行したいので、これはあまり良くありません。

45
00:03:18,100 --> 00:03:23,510
しかし、あなたがしたいのは、たとえば、真にブール値のプロパティをTrueに設定するだけです。

46
00:03:23,620 --> 00:03:30,100
あなたは間違いなくあなたのテンプレートにあまりにも多くのロジックを置くべきではありませんが、一般的なルールとしてテンプレートをインラインで行うことができます。

47
00:03:30,130 --> 00:03:32,200
&nbsp;

48
00:03:32,230 --> 00:03:39,270
これでclickイベントにバインドされ、サーバーメソッドの作成時にそれを実行します。

49
00:03:39,270 --> 00:03:42,090
では、アプリケーションにアクションがあることを見てみましょう。

50
00:03:42,100 --> 00:03:43,470
ページをリロードしましょう。

51
00:03:43,510 --> 00:03:47,530
ボタンが有効になり、ここでこの部分を見ます。

52
00:03:47,560 --> 00:03:55,620
そこで私たちは独自のメソッドをトリガーしているので、変更されたボタンをクリックしてサーバーが作成されました。

53
00:03:55,720 --> 00:03:58,270
これが単純なイベントバインディングの仕組みです。

54
00:03:58,270 --> 00:03:59,870
かっこを使用します。

55
00:04:00,040 --> 00:04:04,910
イベント名を間に入れて、実行するコードを引用符で囲みます。

56
00:04:05,020 --> 00:04:06,580
このイベントが発生すると
